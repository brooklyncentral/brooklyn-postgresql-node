#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
brooklyn.catalog:
  items:
  - "https://raw.githubusercontent.com/brooklyncentral/common-catalog-utils/master/common-tests/src/main/resources/commontests/common.tests.bom"
  - id: brooklyn-postgresql-node-tests
    version: 0.1
    itemType: template
    iconUrl: https://wiki.postgresql.org/images/a/a4/PostgreSQL_logo.3colors.svg
    name: PostgreSQL Node tests
    description: Test that PostgreSQL Node is running correctly
    license_code: Apache-2.0
    license_url: http://www.apache.org/licenses/LICENSE-2.0.txt
    item:
      brooklyn.parameters:
      - name: timeout.initialStartup
        description: The timeout for provisioning, installing and launching the app-under-test.
        type: org.apache.brooklyn.util.time.Duration
        default: 20m
      - name: timeout.runtimeAssertion
        type: org.apache.brooklyn.util.time.Duration
        description: The timeout for any other operation (e.g. invoking an effector or waiting for a sensor to be updated)
        default: 5m
      services:
      - type: brooklyn-postgresql-node
        id: postgresqlnode
        name: PostgreSQL Node
        brooklyn.config:
          datastore.creation.script.contents: |
            CREATE DATABASE temporary;
            USE temporary;
            CREATE TABLE users (name VARCHAR(20), owner VARCHAR(20), creation_date DATE, updated_date DATE);
            INSERT INTO users VALUES ('mysql', 'mysql', CURRENT_DATE, CURRENT_DATE)
      - type: test-case
        name: PostgreSQL Node tests
        brooklyn.config:
          targetId: postgresqlnode
          timeout: $brooklyn:root().config("timeout.runtimeAssertion")
        brooklyn.children:
        - type: assert-up-and-running-initial
          name: "1. Node up and running"
        - type: assert-up-and-running-initial
          name: "2. App up and running"
        - type: test-case
          name: "3. Verify PostgreSQL install"
          brooklyn.children:
          - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
            name: Check PostgreSQL creating script has been executed
            command: $brooklyn:formatString("psql -U postgres -p %s -qtA -c 'SELECT count(*) FROM users'", $brooklyn:entity("postgresqlnode").attributeWhenReady("postgresql.port"))
            assertStatus:
              equals: 0
            assertOut:
              equals: "1"
            assertErr:
              isEmpty: true
        # Effector: executeScript Tests
        - type: test-case
          name: "4. Effector: executeScript Tests"
          brooklyn.children:
          - type: org.apache.brooklyn.test.framework.TestEffector
            name: Invoke executeScript Effector
            effector: executeScript
            params:
              commands: |
                INSERT INTO users VALUES ('root', 'root', CURRENT_DATE, CURRENT_DATE);
          - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
            name: Check PostgreSQL creating script has been executed
            command: $brooklyn:formatString("psql -U postgres -p %s -qtA -c 'SELECT count(*) FROM users'", $brooklyn:entity("postgresqlnode").attributeWhenReady("postgresql.port"))
            assertStatus:
              equals: 0
            assertOut:
              matches: "2"
            assertErr:
              isEmpty: true
        - type: assert-restart-process
          name: "5. restart process"
          brooklyn.config:
            process.grep.name: "[Pp]ostgres"
        - type: assert-stop-and-restart-process
          name: "6. stop and restart process"
          brooklyn.config:
            process.grep.name: "[Pp]ostgres"
